// Flex
@mixin flex_justify($display: flex, $justifyContent: center) {
  @if ($display == flex) {
    display: $display;
    justify-content: $justifyContent;
  } @else {
    display: $display;
  }
}

@mixin flex_align($display: flex, $alignItems: center) {
  @if ($display == flex) {
    display: $display;
    align-items: $alignItems;
  } @else {
    display: $display;
  }
}

@mixin flex_justify-align($display: flex, $justifyContent: center, $alignItems: center) {
  @if ($display == flex) {
    display: $display;
    align-items: $alignItems;
    justify-content: $justifyContent;
  } @else {
    display: $display;
  }
}

@mixin flex-wrap($display: flex, $wrap: wrap) {
  @if ($display == flex) {
    display: $display;
    flex-wrap: $wrap
  } @else {
    display: $display;
  }
}

//  Size
@mixin width-height($size) {
  width: $size;
  height: $size;
}

@mixin max_width-height($size) {
  max-width: $size;
  max-height: $size;
}

@mixin min_width-height($size) {
  min-width: $size;
  min-height: $size;
}

@mixin min-max_width($size) {
  max-width: $size;
  min-width: $size;
}

@mixin min-max_height($size) {
  max-height: $size;
  min-height: $size;
}

@mixin min-max_width-height($size) {
  max-width: $size;
  max-height: $size;
  min-width: $size;
  min-height: $size;
}

//  Margin
@mixin margin_left-right($size) {
  margin-left: $size;
  margin-right: $size;
}

@mixin margin_top-bottom($size) {
  margin-top: $size;
  margin-bottom: $size;
}

//  Padding
@mixin padding_left-right($size) {
  padding-left: $size;
  padding-right: $size;
}

@mixin padding_top-bottom($size) {
  padding-top: $size;
  padding-bottom: $size;
}

//  Margin, Padding
@mixin margin-padding($size) {
  margin: $size;
  padding: $size;
}

// Parallax
@mixin parallax($url: '') {
  @if ($url != '') {
    background-image: url($url);
  }
  background-attachment: fixed;
  background-repeat: no-repeat;
  background-size: cover;
  width: 100vw;
  height: 100vh;
}

// Device

@mixin fill_icon($color) {
  fill: $color;
  & * {
    fill: $color
  }
}

@mixin shadow_card($color: rgb(31, 168, 37)) {
  box-shadow: 0 0 23px 2px rgba($color, 13%);
}

@mixin classic_button(
  $colorButton: #00AD74FF,
  $colorText: white,
  $hoverColorButton: #00AD74FF,
  $hoverColorText: white,
  $bcgOpacity: 'false',
  $bkgWhenOpacity: $colorButton,
  $opacity: 0.1
) {
  cursor: pointer;
  margin-top: auto;
  margin-bottom: auto;
  line-height: 1.6rem;
  border: 1px solid $colorButton;
  color: $colorText;
  padding: 10px 13px;
  transition: .5s;

  @if ($bcgOpacity == 'true') {
    background-color: rgba($bkgWhenOpacity, $opacity);
  } @else {
    background-color: transparent;
  }

  &.disabled {
    opacity: .5;

    &:hover {
      background-color: initial;
    }
  }
  &:hover {
    background-color: $hoverColorButton;
    color: $hoverColorText;
    transition: .5s;
  }
}

// Tracks

@mixin scrollbar (
  $width: 7px,
  $bkgColorTrack: 255,
  $display: block,
  $bkgColorThumb: 0,
  $borderRadius: 30px,
  $opacityThumb: .6
) {
  &::-webkit-scrollbar, &::-webkit-scrollbar-button {
    width: $width;
  }

  &::-webkit-scrollbar-track, &::-webkit-scrollbar-track-piece {
    background-color: $bkgColorTrack;
    display: $display;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba($bkgColorThumb, $opacityThumb);
    border-radius: 30px;
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: rgb($bkgColorThumb);
  }
}